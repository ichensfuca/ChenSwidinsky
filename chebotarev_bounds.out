Magma V2.28-23    Mon Jun 30 2025 16:49:58 on cecm-gaby [Seed = 4226852872]
Type ? for help.  Type <Ctrl>-D to quit.


Results for n_K = 2: 

If log d_K <=  100.00000, then
 p <= 37744.71840 

If log d_K >  100.00000, then
 p <= (   1.44600 * log d_K +    0.23000 * n +    6.80000)^2

The quantity

(   1.44600 * ((n0-1) * log(2) + n0 * log(n0)) +    0.23000 * n0 +    6.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 3: 

If log d_K <=  100.00000, then
 p <= 43936.35210 

If log d_K >  100.00000, then
 p <= (   1.52700 * log d_K +    0.17000 * n +    6.40000)^2

The quantity

(   1.52700 * ((n0-1) * log(2) + n0 * log(n0)) +    0.17000 * n0 +    6.40000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 4: 

If log d_K <=  100.00000, then
 p <= 44049.61440 

If log d_K >  100.00000, then
 p <= (   1.52700 * log d_K +    0.17000 * n +    6.40000)^2

The quantity

(   1.52700 * ((n0-1) * log(2) + n0 * log(n0)) +    0.17000 * n0 +    6.40000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 5: 

If log d_K <=  100.00000, then
 p <= 52555.56250 

If log d_K >  100.00000, then
 p <= (   1.62900 * log d_K +    0.11000 * n +    6.10000)^2

The quantity

(   1.62900 * ((n0-1) * log(2) + n0 * log(n0)) +    0.11000 * n0 +    6.10000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 6: 

If log d_K <=  100.00000, then
 p <= 52651.89160 

If log d_K >  100.00000, then
 p <= (   1.62900 * log d_K +    0.11000 * n +    6.10000)^2

The quantity

(   1.62900 * ((n0-1) * log(2) + n0 * log(n0)) +    0.11000 * n0 +    6.10000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 7: 

If log d_K <=  100.00000, then
 p <= 52748.30890 

If log d_K >  100.00000, then
 p <= (   1.62900 * log d_K +    0.11000 * n +    6.10000)^2

The quantity

(   1.62900 * ((n0-1) * log(2) + n0 * log(n0)) +    0.11000 * n0 +    6.10000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 8: 

If log d_K <=  100.00000, then
 p <= 52844.81440 

If log d_K >  100.00000, then
 p <= (   1.62900 * log d_K +    0.11000 * n +    6.10000)^2

The quantity

(   1.62900 * ((n0-1) * log(2) + n0 * log(n0)) +    0.11000 * n0 +    6.10000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 9: 

If log d_K <=  100.00000, then
 p <= 52941.40810 

If log d_K >  100.00000, then
 p <= (   1.62900 * log d_K +    0.11000 * n +    6.10000)^2

The quantity

(   1.62900 * ((n0-1) * log(2) + n0 * log(n0)) +    0.11000 * n0 +    6.10000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 10: 

If log d_K <=  100.00000, then
 p <= 55979.56000 

If log d_K >  100.00000, then
 p <= (   1.66700 * log d_K +    0.09000 * n +    6.00000)^2

The quantity

(   1.66700 * ((n0-1) * log(2) + n0 * log(n0)) +    0.09000 * n0 +    6.00000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 11: 

If log d_K <=  100.00000, then
 p <= 56069.50410 

If log d_K >  100.00000, then
 p <= (   1.66700 * log d_K +    0.09000 * n +    6.00000)^2

The quantity

(   1.66700 * ((n0-1) * log(2) + n0 * log(n0)) +    0.09000 * n0 +    6.00000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 12: 

If log d_K <=  100.00000, then
 p <= 56159.52040 

If log d_K >  100.00000, then
 p <= (   1.66700 * log d_K +    0.09000 * n +    6.00000)^2

The quantity

(   1.66700 * ((n0-1) * log(2) + n0 * log(n0)) +    0.09000 * n0 +    6.00000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 13: 

If log d_K <=  100.00000, then
 p <= 56249.60890 

If log d_K >  100.00000, then
 p <= (   1.66700 * log d_K +    0.09000 * n +    6.00000)^2

The quantity

(   1.66700 * ((n0-1) * log(2) + n0 * log(n0)) +    0.09000 * n0 +    6.00000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 14: 

If log d_K <=  100.00000, then
 p <= 56339.76960 

If log d_K >  100.00000, then
 p <= (   1.66700 * log d_K +    0.09000 * n +    6.00000)^2

The quantity

(   1.66700 * ((n0-1) * log(2) + n0 * log(n0)) +    0.09000 * n0 +    6.00000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 15: 

If log d_K <=  100.00000, then
 p <= 52532.64000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 16: 

If log d_K <=  100.00000, then
 p <= 52578.49000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 17: 

If log d_K <=  100.00000, then
 p <= 52624.36000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 18: 

If log d_K <=  100.00000, then
 p <= 52670.25000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 19: 

If log d_K <=  100.00000, then
 p <= 52716.16000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 20: 

If log d_K <=  100.00000, then
 p <= 52762.09000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 21: 

If log d_K <=  100.00000, then
 p <= 52808.04000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 22: 

If log d_K <=  100.00000, then
 p <= 52854.01000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 23: 

If log d_K <=  100.00000, then
 p <= 52900.00000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 24: 

If log d_K <=  100.00000, then
 p <= 52946.01000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 25: 

If log d_K <=  100.00000, then
 p <= 52992.04000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 26: 

If log d_K <=  100.00000, then
 p <= 53038.09000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 27: 

If log d_K <=  100.00000, then
 p <= 53084.16000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 28: 

If log d_K <=  100.00000, then
 p <= 53130.25000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 29: 

If log d_K <=  100.00000, then
 p <= 53176.36000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 30: 

If log d_K <=  100.00000, then
 p <= 53222.49000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 31: 

If log d_K <=  100.00000, then
 p <= 53268.64000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 32: 

If log d_K <=  100.00000, then
 p <= 53314.81000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 33: 

If log d_K <=  100.00000, then
 p <= 53361.00000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 34: 

If log d_K <=  100.00000, then
 p <= 53407.21000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 35: 

If log d_K <=  100.00000, then
 p <= 53453.44000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 36: 

If log d_K <=  100.00000, then
 p <= 53499.69000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 37: 

If log d_K <=  100.00000, then
 p <= 53545.96000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 38: 

If log d_K <=  100.00000, then
 p <= 53592.25000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 39: 

If log d_K <=  100.00000, then
 p <= 53638.56000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 40: 

If log d_K <=  100.00000, then
 p <= 53684.89000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 41: 

If log d_K <=  100.00000, then
 p <= 53731.24000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 42: 

If log d_K <=  100.00000, then
 p <= 53777.61000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 43: 

If log d_K <=  100.00000, then
 p <= 53824.00000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 44: 

If log d_K <=  100.00000, then
 p <= 53870.41000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 45: 

If log d_K <=  100.00000, then
 p <= 53916.84000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 46: 

If log d_K <=  100.00000, then
 p <= 53963.29000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 47: 

If log d_K <=  100.00000, then
 p <= 54009.76000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 48: 

If log d_K <=  100.00000, then
 p <= 54056.25000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 49: 

If log d_K <=  100.00000, then
 p <= 54102.76000 

If log d_K >  100.00000, then
 p <= (   1.74500 * log d_K +    0.04000 * n +    5.80000)^2

The quantity

(   1.74500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.04000 * n0 +    5.80000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 50: 

If log d_K <=  100.00000, then
 p <= 280900.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 51: 

If log d_K <=  100.00000, then
 p <= 283556.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 52: 

If log d_K <=  100.00000, then
 p <= 286225.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 53: 

If log d_K <=  100.00000, then
 p <= 288906.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 54: 

If log d_K <=  100.00000, then
 p <= 291600.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 55: 

If log d_K <=  100.00000, then
 p <= 294306.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 56: 

If log d_K <=  100.00000, then
 p <= 297025.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 57: 

If log d_K <=  100.00000, then
 p <= 299756.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 58: 

If log d_K <=  100.00000, then
 p <= 302500.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 59: 

If log d_K <=  100.00000, then
 p <= 305256.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 60: 

If log d_K <=  100.00000, then
 p <= 308025.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 61: 

If log d_K <=  100.00000, then
 p <= 310806.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 62: 

If log d_K <=  100.00000, then
 p <= 313600.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 63: 

If log d_K <=  100.00000, then
 p <= 316406.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 64: 

If log d_K <=  100.00000, then
 p <= 319225.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 65: 

If log d_K <=  100.00000, then
 p <= 322056.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 66: 

If log d_K <=  100.00000, then
 p <= 324900.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 67: 

If log d_K <=  100.00000, then
 p <= 327756.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 68: 

If log d_K <=  100.00000, then
 p <= 330625.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 69: 

If log d_K <=  100.00000, then
 p <= 333506.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 70: 

If log d_K <=  100.00000, then
 p <= 336400.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 71: 

If log d_K <=  100.00000, then
 p <= 339306.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 72: 

If log d_K <=  100.00000, then
 p <= 342225.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 73: 

If log d_K <=  100.00000, then
 p <= 345156.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 74: 

If log d_K <=  100.00000, then
 p <= 348100.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 75: 

If log d_K <=  100.00000, then
 p <= 351056.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 76: 

If log d_K <=  100.00000, then
 p <= 354025.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 77: 

If log d_K <=  100.00000, then
 p <= 357006.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 78: 

If log d_K <=  100.00000, then
 p <= 360000.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 79: 

If log d_K <=  100.00000, then
 p <= 363006.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 80: 

If log d_K <=  100.00000, then
 p <= 366025.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 81: 

If log d_K <=  100.00000, then
 p <= 369056.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 82: 

If log d_K <=  100.00000, then
 p <= 372100.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 83: 

If log d_K <=  100.00000, then
 p <= 375156.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 84: 

If log d_K <=  100.00000, then
 p <= 378225.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 85: 

If log d_K <=  100.00000, then
 p <= 381306.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 86: 

If log d_K <=  100.00000, then
 p <= 384400.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 87: 

If log d_K <=  100.00000, then
 p <= 387506.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 88: 

If log d_K <=  100.00000, then
 p <= 390625.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 89: 

If log d_K <=  100.00000, then
 p <= 393756.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 90: 

If log d_K <=  100.00000, then
 p <= 396900.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 91: 

If log d_K <=  100.00000, then
 p <= 400056.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 92: 

If log d_K <=  100.00000, then
 p <= 403225.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 93: 

If log d_K <=  100.00000, then
 p <= 406406.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 94: 

If log d_K <=  100.00000, then
 p <= 409600.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 95: 

If log d_K <=  100.00000, then
 p <= 412806.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 96: 

If log d_K <=  100.00000, then
 p <= 416025.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 97: 

If log d_K <=  100.00000, then
 p <= 419256.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 98: 

If log d_K <=  100.00000, then
 p <= 422500.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 99: 

If log d_K <=  100.00000, then
 p <= 425756.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 100: 

If log d_K <=  100.00000, then
 p <= 429025.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 101: 

If log d_K <=  100.00000, then
 p <= 432306.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 102: 

If log d_K <=  100.00000, then
 p <= 435600.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 103: 

If log d_K <=  100.00000, then
 p <= 438906.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 104: 

If log d_K <=  100.00000, then
 p <= 442225.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 105: 

If log d_K <=  100.00000, then
 p <= 445556.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 106: 

If log d_K <=  100.00000, then
 p <= 448900.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 107: 

If log d_K <=  100.00000, then
 p <= 452256.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 108: 

If log d_K <=  100.00000, then
 p <= 455625.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 109: 

If log d_K <=  100.00000, then
 p <= 459006.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 110: 

If log d_K <=  100.00000, then
 p <= 462400.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 111: 

If log d_K <=  100.00000, then
 p <= 465806.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 112: 

If log d_K <=  100.00000, then
 p <= 469225.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 113: 

If log d_K <=  100.00000, then
 p <= 472656.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 114: 

If log d_K <=  100.00000, then
 p <= 476100.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 115: 

If log d_K <=  100.00000, then
 p <= 479556.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 116: 

If log d_K <=  100.00000, then
 p <= 483025.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 117: 

If log d_K <=  100.00000, then
 p <= 486506.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 118: 

If log d_K <=  100.00000, then
 p <= 490000.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 119: 

If log d_K <=  100.00000, then
 p <= 493506.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 120: 

If log d_K <=  100.00000, then
 p <= 497025.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 121: 

If log d_K <=  100.00000, then
 p <= 500556.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 122: 

If log d_K <=  100.00000, then
 p <= 504100.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 123: 

If log d_K <=  100.00000, then
 p <= 507656.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 124: 

If log d_K <=  100.00000, then
 p <= 511225.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 125: 

If log d_K <=  100.00000, then
 p <= 514806.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 126: 

If log d_K <=  100.00000, then
 p <= 518400.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 127: 

If log d_K <=  100.00000, then
 p <= 522006.25000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)



Results for n_K = 128: 

If log d_K <=  100.00000, then
 p <= 525625.00000 

If log d_K >  100.00000, then
 p <= (   1.75500 * log d_K +    0.00000 * n +    5.70000)^2

The quantity

(   1.75500 * ((n0-1) * log(2) + n0 * log(n0)) +    0.00000 * n0 +    5.70000)^2

dominates both of the upper bounds where n0 = max(72,n_K)

Using a,b,c = 1.74500000000000000000000000000 0.230000000000000000000000000000 
6.80000000000000000000000000000

We obtain a bound of 

  123.89500 log rad(2 N_E N_E') +  560.68033

Using a,b,c = 1.74500000000000000000000000000 0.230000000000000000000000000000 
6.80000000000000000000000000000

We obtain a bound of 

  165.77500 log rad(2 N_E N_E') +  793.49961

Using a,b,c = 1.74500000000000000000000000000 0.230000000000000000000000000000 
6.80000000000000000000000000000

We obtain a bound of 

   82.01500 log rad(2 N_E N_E') +  342.09180

Using a,b,c = 1.75500000000000000000000000000 0.230000000000000000000000000000 
6.80000000000000000000000000000

We obtain a bound of 

  222.88500 log rad(2 N_E N_E') + 1126.20008


Total time: 0.330 seconds, Total memory usage: 32.09MB
